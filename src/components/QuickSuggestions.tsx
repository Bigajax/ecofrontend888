import React from "react";
import clsx from "clsx";
import RotatingPrompts from "./RotatingPrompts";

/* --------- Tipo p√∫blico para usar no ChatPage --------- */
export type Suggestion = {
  id: string;
  label: string;          // texto vis√≠vel
  icon?: string;          // emoji/√≠cone opcional
  modules?: string[];     // chaves dos m√≥dulos a ativar
  systemHint?: string;    // dica extra para a IA ajustar o tom
};

export type SuggestionPickMeta = {
  source: "rotating" | "pill";
  index: number;
};

type QuickSuggestionsProps = {
  visible: boolean;
  className?: string;

  /** Preferencial ‚Äî recebe objetos ricos */
  suggestions?: Suggestion[];
  onPickSuggestion?: (s: Suggestion, meta?: SuggestionPickMeta) => void;

  /** Legado: compat com vers√£o antiga (texto direto) */
  onPick?: (text: string) => void;

  /** Rotativas */
  showRotating?: boolean;          // default: true
  rotatingItems?: Suggestion[];    // opcional ‚Äî se n√£o vier, usa DEFAULT_ROTATING
  rotationMs?: number;             // default: 4500ms
  disabled?: boolean;
};

/* --------- P√≠lulas padr√£o (Eco convida) --------- */
export const DEFAULT_SUGGESTIONS: Suggestion[] = [
  {
    id: "bias_check",
    icon: "üß†",
    label: "Quer checar poss√≠veis vieses hoje?",
    modules: [
      "eco_heuristica_ancoragem",
      "eco_heuristica_disponibilidade",
      "eco_heuristica_regressao_media",
      "eco_heuristica_excesso_confianca",
    ],
    systemHint:
      "Tom: curioso, gentil e n√£o-julgador. Convide o usu√°rio a revisar vieses comuns do dia (ancoragem, disponibilidade, excesso de confian√ßa e regress√£o √† m√©dia) com linguagem simples. Fa√ßa 1 pergunta pr√°tica e proponha 1 micro-checagem aplic√°vel agora.",
  },
  {
    id: "presence_now",
    icon: "üåø",
    label: "Praticar presen√ßa por 3 min?",
    modules: ["eco_observador_presente", "eco_presenca_silenciosa", "eco_corpo_emocao"],
    systemHint:
      "Conduza um exerc√≠cio breve de presen√ßa (‚âà3 min), passo a passo, com foco em corpo e respira√ß√£o. Tom calmo, direto e gentil. Finalize com 1 pergunta simples sobre como a pessoa se sente agora.",
  },
  {
    id: "vulnerability",
    icon: "ü´∂",
    label: "Explorar coragem & vulnerabilidade?",
    modules: ["eco_vulnerabilidade_defesas", "eco_vulnerabilidade_mitos", "eco_emo_vergonha_combate"],
    systemHint:
      "Inspire-se em Bren√© Brown. Diferencie vulnerabilidade de exposi√ß√£o. Ajude a reconhecer 1 defesa ativa e convide para 1 gesto pequeno e aut√™ntico, mantendo o tom acolhedor e sem prescrever.",
  },
  {
    id: "stoic_reflection",
    icon: "üèõÔ∏è",
    label: "Reflex√£o estoica ‚Äî o que depende de voc√™?",
    modules: ["eco_presenca_racional", "eco_identificacao_mente", "eco_fim_do_sofrimento"],
    systemHint:
      "Use o olhar estoico para distinguir o que depende ou n√£o de si. Conduza 3 perguntas curtas (controle, julgamento, a√ß√£o m√≠nima) e encerre com um compromisso simples e realista.",
  },
];

/* --------- Frases rotativas (convites da ECO) --------- */
export const DEFAULT_ROTATING: Suggestion[] = [
  {
    id: "rot_presenca_scan",
    icon: "üå¨Ô∏è",
    label: "Vamos fazer um mini exerc√≠cio de presen√ßa agora?",
    modules: ["eco_observador_presente", "eco_presenca_silenciosa", "eco_corpo_emocao"],
    systemHint:
      "Guie um body scan curto (2‚Äì3 min). Fale em tom calmo, direto e gentil. Oriente aten√ß√£o √† respira√ß√£o, pontos de contato do corpo e sons ao redor. Feche com 1 pergunta simples sobre a sensa√ß√£o do momento.",
  },
  {
    id: "rot_kahneman_check",
    icon: "üß©",
    label: "Quer explorar se sua mente criou algum atalho hoje?",
    modules: [
      "eco_heuristica_ancoragem",
      "eco_heuristica_disponibilidade",
      "eco_heuristica_excesso_confianca",
    ],
    systemHint:
      "Convite leve para examinar heur√≠sticas (ancoragem, disponibilidade, excesso de confian√ßa). Explique de forma acess√≠vel, fa√ßa 1 pergunta diagn√≥stica e ofere√ßa 1 reframe pr√°tico. Sem tom prescritivo.",
  },
  {
    id: "rot_vulnerabilidade",
    icon: "üíó",
    label: "Falamos um pouco sobre coragem e vulnerabilidade?",
    modules: ["eco_vulnerabilidade_defesas", "eco_vulnerabilidade_mitos", "eco_emo_vergonha_combate"],
    systemHint:
      "Traga a perspectiva de Bren√© Brown. Ajude a diferenciar vulnerabilidade de exposi√ß√£o. Convide a pessoa a nomear 1 defesa e imaginar 1 gesto pequeno de autenticidade no contexto atual.",
  },
  {
    id: "rot_estoico",
    icon: "üèõÔ∏è",
    label: "Vamos olhar juntos o que est√° sob seu controle hoje?",
    modules: ["eco_presenca_racional", "eco_identificacao_mente", "eco_fim_do_sofrimento"],
    systemHint:
      "Aplique a lente estoica: controle, julgamento e a√ß√£o m√≠nima poss√≠vel. Conduza 3 perguntas curtas e finalize com 1 passo simples, mantendo humor apropriado e acolhimento.",
  },
  {
    id: "rot_regressao_media",
    icon: "üìâ",
    label: "Quer revisar suas expectativas com mais leveza hoje?",
    modules: ["eco_heuristica_regressao_media", "eco_heuristica_certeza_emocional"],
    systemHint:
      "Explique regress√£o √† m√©dia em linguagem simples. Convide a recalibrar expectativas ap√≥s picos (bons/ruins). Proponha 1 evid√™ncia concreta a observar esta semana, com tom gentil e n√£o-julgador.",
  },
];

/* === Tipografia igual ao Drawer (clean) === */
const labelCls =
  "text-[15px] leading-[1.35] text-slate-900/95 font-normal tracking-[-0.005em] antialiased";

export default function QuickSuggestions({
  visible,
  className = "",
  suggestions = DEFAULT_SUGGESTIONS,
  onPickSuggestion,
  onPick, // legado
  showRotating = true,
  rotatingItems = DEFAULT_ROTATING,
  rotationMs = 4500,
  disabled = false,
}: QuickSuggestionsProps) {
  if (!visible) return null;

  const emitPick = (s: Suggestion, meta?: SuggestionPickMeta) => {
    if (disabled) return;
    if (onPickSuggestion) return onPickSuggestion(s, meta);
    if (onPick) return onPick(`${s.icon ? s.icon + " " : ""}${s.label}`);
  };

  return (
    <div
      className={clsx(
        "quick-suggestions mx-auto flex w-full flex-col items-center gap-3",
        className,
      )}
      aria-label="Atalhos de in√≠cio"
      role="region"
    >
      {/* ‚¨ÜÔ∏è Frases rotativas */}
      {showRotating && (
        <div className="w-full">
          <RotatingPrompts
            items={rotatingItems}
            onPick={emitPick}
            intervalMs={rotationMs}
            className="w-full"
            // for√ßa a mesma tipografia no componente filho
            labelClassName={labelCls}
            disabled={disabled}
          />
        </div>
      )}

      {/* ‚¨áÔ∏è P√≠lulas compactas */}
      <div className="quick-suggestions__grid">
        {suggestions.map((s, index) => (
          <button
            key={s.id}
            onClick={() => emitPick(s, { source: "pill", index })}
            className="
              quick-suggestions__pill
              rounded-2xl
              border border-black/10
              bg-white/80
              px-4 py-3
              text-slate-900/95
              shadow-[0_2px_12px_rgba(0,0,0,0.06)]
              backdrop-blur-md
              transition-colors duration-200 ease-out
              hover:border-black/15 hover:bg-white
              focus:outline-none focus-visible:ring-2 focus-visible:ring-black/10
              disabled:opacity-70
            "
            aria-label={`Sugerir: ${s.label}`}
            title={s.label}
            data-suggestion-id={s.id}
            type="button"
            disabled={disabled}
          >
            {s.icon && (
              <span
                className="quick-suggestions__pill-icon leading-none text-[15px] md:text-[17px]"
                aria-hidden
              >
                {s.icon}
              </span>
            )}
            <span className={clsx(labelCls, "text-center")}>{s.label}</span>
          </button>
        ))}
      </div>
    </div>
  );
}
